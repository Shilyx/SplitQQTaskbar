/*
 *  @file  : SplitQQTaskbar.cpp
 *  @author: shilyx
 *  @date  : 2023-07-14 10:02:22.118
 *  @note  : Generated by SlxTemplates build:20230411
 */

#include <Windows.h>
#include <CommCtrl.h>
#include "../SplitQQTaskbarAddin/SplitQQTaskbarAddin.h"
#include "resource.h"

class CSplitQQTaskbarDialog {
#define SPLITQQTASKBAR_OBJECT_PROP_NAME L"__SplitQQTaskbarObject"
    enum {
        WM_NOTIFY_CALLBACK = WM_USER + 0x12,
    };

    enum {
        MI_ABOUT = 11,
        MI_QUIT,
    };

public:
    CSplitQQTaskbarDialog(HINSTANCE hInstance, LPCWSTR lpTemplate, HWND hParent, int nShowCmd)
        : m_hInstance(hInstance)
        , m_lpTemplate(lpTemplate)
        , m_hwndDlg(NULL)
        , m_hParent(hParent)
        , m_nShowCmd(nShowCmd)
        , m_hHook(NULL)
        , m_WM_REBUILDTOOLBAR(RegisterWindowMessageW(L"TaskbarCreated")) {

        ZeroMemory(&m_nid, sizeof(m_nid));
        m_nid.cbSize = sizeof(m_nid);
    }

    int Run() {
        HWND hwndDlg = CreateDialogParamW(m_hInstance, m_lpTemplate, m_hParent, SplitQQTaskbarDialogProc, (LPARAM)this);

        if (IsWindow(hwndDlg)) {
            // ShowWindow(hwndDlg, m_nShowCmd);
            UpdateWindow(hwndDlg);

            MSG msg;

            while (TRUE) {
                int nRet = GetMessageW(&msg, NULL, 0, 0);

                if (nRet < 0) {
                    break;
                }

                if (nRet == 0) {
                    return (int)msg.wParam;
                }

                if (!IsDialogMessageW(hwndDlg, &msg)) {
                    TranslateMessage(&msg);
                    DispatchMessageW(&msg);
                }
            }
        }

        return 0;
    }

private:
    static INT_PTR CALLBACK SplitQQTaskbarDialogProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam) {
        if (uMsg == WM_INITDIALOG) {
            SetPropW(hwndDlg, SPLITQQTASKBAR_OBJECT_PROP_NAME, (HANDLE)lParam);
        }

        CSplitQQTaskbarDialog *pSplitQQTaskbarDialog = (CSplitQQTaskbarDialog *)GetPropW(hwndDlg, SPLITQQTASKBAR_OBJECT_PROP_NAME);

        if (pSplitQQTaskbarDialog != NULL) {
            return pSplitQQTaskbarDialog->SplitQQTaskbarDialogPrivateProc(hwndDlg, uMsg, wParam, lParam);
        }

        return FALSE;
    }

    INT_PTR SplitQQTaskbarDialogPrivateProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam) {
        switch (uMsg) {
        case WM_INITDIALOG:
            m_nid.hWnd = hwndDlg;
            m_nid.uID = 1;
            m_nid.uCallbackMessage = WM_NOTIFY_CALLBACK;
            m_nid.hIcon = LoadIconW(m_hInstance, MAKEINTRESOURCEW(IDI_MAINFRAME));
            m_nid.uFlags = NIF_TIP | NIF_MESSAGE | NIF_ICON;
            lstrcpynW(m_nid.szTip, L"拆分不同QQ进程的任务栏图标\r\nby shilyx 2023.7", RTL_NUMBER_OF(m_nid.szTip));
            m_nid.uTimeout = 3000;
            m_nid.dwInfoFlags = NIIF_INFO;

            Shell_NotifyIconW(NIM_ADD, &m_nid);
            ShowBalloon(L"SplitQQTaskbar", L"后续启动的不同QQ进程的任务栏图标将单独合并", NIIF_INFO, 4000);

            SetClassLongPtrW(hwndDlg, GCL_HICON, (LONG_PTR)m_nid.hIcon);
            SetClassLongPtrW(hwndDlg, GCL_HICONSM, (LONG_PTR)m_nid.hIcon);

            m_hwndDlg = hwndDlg;
            OnInitDialog();

            return 0;

        case WM_CLOSE:
            DestroyWindow(hwndDlg);
            return 0;

        case WM_DESTROY:
            PostQuitMessage(0);
            Shell_NotifyIconW(NIM_DELETE, &m_nid);
            RemovePropW(hwndDlg, SPLITQQTASKBAR_OBJECT_PROP_NAME);
            return 0;

        case WM_NOTIFY_CALLBACK:
            if (lParam == WM_RBUTTONUP) {
                POINT pt;

                GetCursorPos(&pt);
                SetForegroundWindow(hwndDlg);

                HMENU hMenu = CreatePopupMenu();

                AppendMenuW(hMenu, MF_STRING, MI_ABOUT, L"&About...");
                AppendMenuW(hMenu, MF_SEPARATOR, 0, NULL);
                AppendMenuW(hMenu, MF_STRING, MI_QUIT, L"&Quit");

                switch (TrackPopupMenu(hMenu, TPM_RETURNCMD | TPM_NONOTIFY, pt.x, pt.y, 0, hwndDlg, NULL)) {
                case MI_ABOUT:
                    if (IsWindowEnabled(hwndDlg)) {
                        MessageBoxW(
                            hwndDlg,
                            L"分属于多个QQ进程的会话在任务栏上共用一个图标，本项目将他们拆分开\r\n"
                            L"\r\n"
                            L"项目地址: https://github.com/shilyx/SplitQQTaskbar\r\n"
                            L"\r\n"
                            L"by shilyx 2023.7",
                            L"information",
                            MB_SYSTEMMODAL | MB_ICONINFORMATION);
                    }
                    break;

                case MI_QUIT:
                    DestroyWindow(hwndDlg);
                    break;

                default:
                    break;
                }

                DestroyMenu(hMenu);
            }
            return 0;

        default:
            if (uMsg == m_WM_REBUILDTOOLBAR) {
                Shell_NotifyIconW(NIM_ADD, &m_nid);
            }
            break;
        }

        return FALSE;
    }

    void ShowBalloon(LPCWSTR lpTitle, LPCWSTR lpContent, DWORD dwInfoFlag = NIIF_INFO, UINT nTimeout = 3000) {
        NOTIFYICONDATAW nid = m_nid;

        nid.uFlags |= NIF_INFO;
        lstrcpynW(nid.szInfo, lpContent, RTL_NUMBER_OF(nid.szInfo));
        lstrcpynW(nid.szInfoTitle, lpTitle, RTL_NUMBER_OF(nid.szInfoTitle));
        nid.uTimeout = nTimeout;

        if (dwInfoFlag == 0) {
            dwInfoFlag = NIIF_INFO;
        }

        nid.dwInfoFlags = dwInfoFlag;

        Shell_NotifyIconW(NIM_MODIFY, &nid);
    }

    void OnInitDialog() {
        m_hHook = SetHuuk();
    }

    void OnDestroy() {
        if (m_hHook) {
            UnhuukHuuk(m_hHook);
        }
    }

private:
    HHOOK m_hHook;
    HWND m_hwndDlg;
    HWND m_hParent;
    HINSTANCE m_hInstance;
    LPCWSTR m_lpTemplate;
    int m_nShowCmd;
    NOTIFYICONDATAW m_nid;
    UINT m_WM_REBUILDTOOLBAR;
};

int APIENTRY wWinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nShowCmd) {
    InitCommonControls();

    HANDLE hMutex = CreateMutexW(NULL, FALSE, L"Global\\{592CED67-BCC6-4C6F-A22A-DDC25A6E47BA}");
    DWORD dwLastError = GetLastError();

    if (dwLastError == ERROR_ACCESS_DENIED || dwLastError == ERROR_ALREADY_EXISTS) {
        MessageBoxW(NULL, L"已有实例正在运行，请勿重复运行", L"info", MB_ICONINFORMATION | MB_TOPMOST);
        return 0;
    }

    int nRet = CSplitQQTaskbarDialog(hInstance, MAKEINTRESOURCEW(IDD_DIALOG), NULL, SW_SHOW).Run();

    if (hMutex != NULL) {
        CloseHandle(hMutex);
    }
    return nRet;
}
